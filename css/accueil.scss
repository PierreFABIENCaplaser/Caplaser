 /// Couleurs utilisées
 /// ------------------------------------------------------------------------------

 $blanc: #fff;
 $noir: #000;
 $bleu_logo_caplaser: #2A437C;
 $bleu_principal: #2672D5;
 $bleu_principal_bg: #E8F2FF;
 $vert_principal: #8BC540;
 $rouge_erreur: #790000;

 /// Couleurs des BU
 $couleur_cloud: #4EC3E0;
 $couleur_infra: #FFA300;
 $couleur_web: #EB6FBD;
 $couleur_gestion: #4AC263;





 /// Breakpoints pour les media queries : définit les breakpoints, qui sont
 /// utilisés dans les mixins. Pour chaque ajout ou suppression de breakpoint,
 /// penser à ajouter / supprimer le mixin correspondant dans le fichier
 /// css/mixins/abstracts/_mixins.scss.
 /// ------------------------------------------------------------------------------

 $largeur-540: 540px;
 $largeur-600: 600px; // Breakpoint ajouté pour gestion du menu secondaire en mobile (fxed, en bas).
 $largeur-640: 640px; // Breakpoint de Gravity Forms
 $largeur-700: 700px; // Breakpoint de Twenty Twenty
 $largeur-768: 768px;
 $largeur-992: 992.98px; // Breakpoint existant. Bootstrap a un breakpoint à 991.98px.
 $largeur-1000: 1000px;
 $largeur-1100: 1100px;
 $largeur-1200: 1200px;
 $largeur-1400: 1400px; // Attention, ce breakpoint s'accompagne d'un bout de jquery (fichier custom.js)
 $largeur-1600: 1600px;
 $largeur-1920: 1920px;



 // ----------------------------------------------------------------
 // Ce fichier contient les mixins Sass utilisées sur CAPLASER
 // ----------------------------------------------------------------





 /// Mixins pour les media queries
 /// les variables des breakpoints sont définies dans le fichier css/abstracts/_variables.scss
 @mixin largeur_1920 {
     @media (max-width: #{$largeur-1920 - 1px}) {
         @content;
     }
 }

 @mixin largeur_1600 {
     @media (max-width: #{$largeur-1600 - 1px}) {
         @content;
     }
 }

 @mixin largeur_1400 {
     @media (max-width: #{$largeur-1400 - 1px}) {
         @content;
     }
 }

 @mixin largeur_1200 {
     @media (max-width: #{$largeur-1200 - 1px}) {
         @content;
     }
 }

 @mixin largeur_1100 {
     @media (max-width: #{$largeur-1100 - 1px}) {
         @content;
     }
 }

 @mixin largeur_1000 {
     @media (max-width: #{$largeur-1000 - 1px}) {
         @content;
     }
 }

 @mixin largeur_992 {
     @media (max-width: #{$largeur-992 - 1px}) {
         @content;
     }
 }

 @mixin largeur_768 {
     @media (max-width: #{$largeur-768 - 1px}) {
         @content;
     }
 }

 @mixin largeur_700 {
     @media (max-width: #{$largeur-700 - 1px}) {
         @content;
     }
 }

 @mixin largeur_640 {
     @media (max-width: #{$largeur-640 - 1px}) {
         @content;
     }
 }

 @mixin largeur_600 {
     @media (max-width: #{$largeur-600 - 1px}) {
         @content;
     }
 }

 @mixin largeur_540 {
     @media (max-width: #{$largeur-540 - 1px}) {
         @content;
     }
 }





 /// Mixin pour les transitions
 /// Peut-être inutile avec l'utilisation de l'autopréfixeur...
 @mixin transition($args...) {
     -webkit-transition: $args;
     -moz-transition: $args;
     -ms-transition: $args;
     -o-transition: $args;
     transition: $args;
 }

 .container_point_timeline {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-content: center;
    -ms-flex-line-pack: center;
    align-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
 }

 .bloc_point_timeline {

     .titre_point_timeline {
         margin-top: 0;
         margin-bottom: 1.5rem;
     }

     &:hover {

         /// Picto users (experts)
         .picto_cap.picto_users {
             .user_centre path {
                 transform: matrix(0.9, 0, 0, 0.9, 90, 45)
             }

             .user_gauche path {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .user_droite path {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .branche_haut_droite {
                 transform: translateX(-70px)
             }

             .branche_haut_gauche {
                 transform: translateX(70px)
             }

             .branche_centre_droit {
                 transform: translateX(0) translateY(-2px)
             }

             .branche_centre_gauche {
                 transform: translateX(0) translateY(-2px)
             }

             .branche_bas_droite {
                 transform: translateX(0)
             }

             .branche_bas_gauche {
                 transform: translateX(0)
             }

             .branche_bas_droite .cercle {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .branche_bas_gauche .cercle {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }
         }

         /// Picto serveurs (serveurs)
         .picto_cap.picto_server {
             .serveurs {
                 transform: matrix(0.9, 0, 0, 0.9, 85, 45)
             }

             .branche_haut_droite {
                 transform: translateX(-70px)
             }

             .branche_haut_gauche {
                 transform: translateX(70px)
             }

             .branche_centre_droit {
                 transform: matrix(1, 0, 0, 1, 0, -60)
             }

             .branche_centre_gauche {
                 transform: matrix(1, 0, 0, 1, 0, -60)
             }

             .branche_bas_droite {
                 transform: translateX(-80px)
             }

             .branche_bas_gauche {
                 transform: translateX(80px)
             }

             .branche_bas_droite .cercle {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .branche_bas_gauche .cercle {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .etoiles {
                 path:first-child {
                     transform: matrix(1, 0, 0, 1, 0, 0)
                 }

                 path:nth-child(2) {
                     transform: matrix(1, 0, 0, 1, 50, -40)
                 }

                 path:nth-child(3) {
                     transform: matrix(1, 0, 0, 1, -50, -40)
                 }
             }
         }

         /// Picto compas (sur mesure)
         .picto_cap.picto_compas {
             .branche_haut_gauche {
                 transform: matrix(1, 0, 0, 1, 12, 0)
             }

             .branche_haut_droite {
                 transform: matrix(1, 0, 0, 1, -12, 0)
             }

             .branche_centre_gauche {
                 transform: matrix(1, 0, 0, 1, 20, -20)
             }

             .branche_centre_droit {
                 transform: matrix(1, 0, 0, 1, -20, -20)
             }

             .branche_bas_droite {
                 transform: translateX(-15px) translateY(10px)
             }

             .branche_bas_gauche {
                 transform: translateX(15px) translateY(10px)
             }

             .branche_bas_droite .cercle {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .branche_bas_gauche .cercle {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .compas {
                 transform: matrix(0.9, 0, 0, 0.9, 70, 40)
             }
         }

         .texte {
             opacity: 1;
             visibility: visible;
         }
     }

     .picto_svg {
         width: fit-content;
     }

     .picto_cap {

         g,
         g path {
             @include transition (all, ease, .25s);
         }

         @include largeur_768 {
             max-width: 40%;
         }

         // Les matrices, ça a l'air fun mais compliqué.
         // On s'en sert pour animer certains path des icones svg, dont le comportement au transform est différent des éléments html "classiques" (notamment ua niveau du transform-origin). 
         // https://www.w3schools.com/css/css3_2dtransforms.asp
         // matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())
         // les svg n'ont pas la même hauteur : pour maintenir leur ratio et leur margin-top, on utilise la fonction maintienRatioPictosAccueil (custom.js)


         /// Picto users (experts)
         &.picto_users {

             /// pour les évolution des matrix on Hover, voir plus haut
             .user_centre path {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .user_gauche path {
                 transform: matrix(0.9, 0, 0, 0.9, 50, 45)
             }

             .user_droite path {
                 transform: matrix(0.9, 0, 0, 0.9, 130, 45)
             }

             .branche_bas_droite {
                 transform: translateX(-40px)
             }

             .branche_bas_gauche {
                 transform: translateX(40px)
             }

             .branche_centre_droit {
                 transform: translateX(10px) translateY(-2px)
             }

             .branche_centre_gauche {
                 transform: translateX(-10px) translateY(-2px)
             }

             .branche_bas_droite .cercle {
                 transform: matrix(.8, 0, 0, .8, 270, 115)
             }

             .branche_bas_gauche .cercle {
                 transform: matrix(.8, 0, 0, .8, 75, 115)
             }
         }

         /// Picto servers (infra de pointe)
         &.picto_server {
             margin: 1px auto 0;

             .serveurs {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .branche_bas_droite {
                 transform: translateX(-40px)
             }

             .branche_bas_gauche {
                 transform: translateX(40px)
             }

             .branche_bas_droite .cercle {
                 transform: matrix(0.8, 0, 0, 0.8, 282, 138)
             }

             .branche_bas_gauche .cercle {
                 transform: matrix(0.8, 0, 0, 0.8, 65, 138)
             }

             .etoiles {
                 path:first-child {
                     transform: matrix(1, 0, 0, 1, 0, 40)
                 }

                 path:nth-child(2) {
                     transform: matrix(1, 0, 0, 1, 0, 0)
                 }

                 path:nth-child(3) {
                     transform: matrix(1, 0, 0, 1, 0, 0)
                 }
             }
         }


         /// Picto compas (sur mmesure)
         &.picto_compas {
             margin: 31px auto 0;

             .branche_haut_gauche {
                 transform: matrix(1, 0, 0, 1, 33, 60)
             }

             .branche_haut_droite {
                 transform: matrix(1, 0, 0, 1, -33, 60)
             }

             .branche_centre_gauche {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .branche_centre_droit {
                 transform: matrix(1, 0, 0, 1, 0, 0)
             }

             .branche_bas_droite {
                 transform: translateX(-20px) translateY(-30px)
             }

             .branche_bas_gauche {
                 transform: translateX(20px) translateY(-30px)
             }

             .branche_bas_droite .cercle {
                 transform: matrix(0.8, 0, 0, 0.8, 212, 123)
             }

             .branche_bas_gauche .cercle {
                 transform: matrix(0.8, 0, 0, 0.8, 75, 123)
             }
         }
     }
 }
